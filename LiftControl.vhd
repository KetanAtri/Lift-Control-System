---------------------------------------------------
-- Sheet: Lift Control
-- RefDes: 
-- Part Number: 
-- Generated By: Multisim
--
-- Author: nova
-- Date: Friday, May 06 20:05:39, 2016
---------------------------------------------------

---------------------------------------------------
-- Use: This file defines the top-level of the design
-- Use with the exported package file
---------------------------------------------------
library ieee;
use ieee.std_logic_1164.ALL;
use ieee.numeric_std.ALL;

library work;
use work.LiftControl_pkg.ALL;


entity LiftControl is
	port (

		A : in std_logic;
		B : in std_logic;
		C : in std_logic;
		D : in std_logic;
		E : in std_logic;
		F : in std_logic;
		Wa : in std_logic;
		Wb : in std_logic;
		Lift_A : out std_logic;
		Lift_B : out std_logic
	);
end LiftControl;


architecture behavioral of LiftControl is


	component AUTO_IBUF
		port(
		I : in std_logic;
		O : out std_logic
	);
	end component;

	component AUTO_OBUF
		port(
		I : in std_logic;
		O : out std_logic
	);
	end component;

	component DIGITAL_HIGH_NI
		Port ( 
  Y : out  STD_LOGIC:='1'
 );
	end component;

	component DIGITAL_LOW_NI
		Port ( 
  Y : out  STD_LOGIC:='0'
 );
	end component;

	component INV_NI
		port (
    A : in STD_LOGIC := 'X';
    Y : out STD_LOGIC := 'U'
  );
	end component;

	component MUX8_1_NI
		port (
   Y : out STD_LOGIC;
   D0 : in STD_LOGIC;
   D1 : in STD_LOGIC;
   D2 : in STD_LOGIC;
   D3 : in STD_LOGIC;
   D4 : in STD_LOGIC;
   D5 : in STD_LOGIC;
   D6 : in STD_LOGIC;
   D7 : in STD_LOGIC;
    A : in STD_LOGIC;
    B : in STD_LOGIC;
    C : in STD_LOGIC;
    G : in STD_LOGIC
  );
	end component;

	component NOR2_NI
		port (
    B : in STD_LOGIC := 'X';
    A : in STD_LOGIC := 'X';
    Y : out STD_LOGIC := 'U'
  );
	end component;
	signal \1\ : std_logic;
	signal \2\ : std_logic;
	signal \3\ : std_logic;
	signal \4\ : std_logic;
	signal \5\ : std_logic;
	signal \6\ : std_logic;
	signal \7\ : std_logic;
	signal \8\ : std_logic;
	signal \9\ : std_logic;
	signal \10\ : std_logic;
	signal \11\ : std_logic;
	signal \12\ : std_logic;
	signal \13\ : std_logic;
	signal \22\ : std_logic;
	signal \15\ : std_logic;
	signal \16\ : std_logic;
	signal \17\ : std_logic;
	signal \18\ : std_logic;
	signal \20\ : std_logic;
	signal \23\ : std_logic;
	signal \21\ : std_logic;
	signal \19\ : std_logic;
	signal \24\ : std_logic;
	signal \14\ : std_logic;
	signal \25\ : std_logic;
begin
	A_AUTOBUF : AUTO_IBUF
		port map( I => A, O => \5\ );
	B_AUTOBUF : AUTO_IBUF
		port map( I => B, O => \9\ );
	C_AUTOBUF : AUTO_IBUF
		port map( I => C, O => \8\ );
	D_AUTOBUF : AUTO_IBUF
		port map( I => D, O => \3\ );
	E_AUTOBUF : AUTO_IBUF
		port map( I => E, O => \2\ );
	F_AUTOBUF : AUTO_IBUF
		port map( I => F, O => \1\ );
	Wa_AUTOBUF : AUTO_IBUF
		port map( I => Wa, O => \19\ );
	Wb_AUTOBUF : AUTO_IBUF
		port map( I => Wb, O => \14\ );
	Lift_A_AUTOBUF : AUTO_OBUF
		port map( I => \25\, O => Lift_A );
	Lift_B_AUTOBUF : AUTO_OBUF
		port map( I => \24\, O => Lift_B );
	U9 : MUX8_1_NI
		port map( D0 => \6\, D1 => \7\, D2 => \7\, D3 => \7\, D4 => \6\, D5 => \4\, D6 => \5\, D7 => \5\, A => \1\, C => \3\, B => \2\, Y => \10\, G => \4\ );
	U10 : MUX8_1_NI
		port map( D0 => \7\, D1 => \7\, D2 => \5\, D3 => \5\, D4 => \7\, D5 => \7\, D6 => \5\, D7 => \4\, A => \1\, C => \3\, B => \2\, Y => \11\, G => \4\ );
	U11 : MUX8_1_NI
		port map( D0 => \4\, D1 => \6\, D2 => \7\, D3 => \7\, D4 => \6\, D5 => \6\, D6 => \7\, D7 => \7\, A => \1\, C => \3\, B => \2\, Y => \12\, G => \4\ );
	U13 : MUX8_1_NI
		port map( D0 => \6\, D1 => \6\, D2 => \4\, D3 => \5\, D4 => \7\, D5 => \7\, D6 => \7\, D7 => \5\, A => \1\, C => \3\, B => \2\, Y => \13\, G => \4\ );
	U14 : MUX8_1_NI
		port map( D0 => \10\, D1 => \11\, D2 => \12\, D3 => \13\, D4 => \4\, D5 => \4\, D6 => \4\, D7 => \4\, A => \8\, C => \4\, B => \9\, Y => \23\, G => \4\ );
	U12 : DIGITAL_LOW_NI
		port map( Y => \4\ );
	U15 : DIGITAL_HIGH_NI
		port map( Y => \7\ );
	U16 : INV_NI
		port map( Y => \6\, A => \5\ );
	U17 : MUX8_1_NI
		port map( D0 => \5\, D1 => \4\, D2 => \4\, D3 => \4\, D4 => \5\, D5 => \7\, D6 => \6\, D7 => \6\, A => \1\, C => \3\, B => \2\, Y => \15\, G => \4\ );
	U18 : MUX8_1_NI
		port map( D0 => \4\, D1 => \4\, D2 => \6\, D3 => \6\, D4 => \4\, D5 => \4\, D6 => \6\, D7 => \7\, A => \1\, C => \3\, B => \2\, Y => \16\, G => \4\ );
	U19 : MUX8_1_NI
		port map( D0 => \7\, D1 => \5\, D2 => \4\, D3 => \4\, D4 => \5\, D5 => \5\, D6 => \4\, D7 => \4\, A => \1\, C => \3\, B => \2\, Y => \17\, G => \4\ );
	U20 : MUX8_1_NI
		port map( D0 => \5\, D1 => \5\, D2 => \7\, D3 => \6\, D4 => \4\, D5 => \4\, D6 => \4\, D7 => \6\, A => \1\, C => \3\, B => \2\, Y => \18\, G => \4\ );
	U21 : MUX8_1_NI
		port map( D0 => \15\, D1 => \16\, D2 => \17\, D3 => \18\, D4 => \4\, D5 => \4\, D6 => \4\, D7 => \4\, A => \8\, C => \4\, B => \9\, Y => \22\, G => \4\ );
	U7 : NOR2_NI
		port map( A => \14\, B => \23\, Y => \20\ );
	U8 : NOR2_NI
		port map( A => \19\, B => \20\, Y => \25\ );
	U24 : NOR2_NI
		port map( A => \22\, B => \19\, Y => \21\ );
	U25 : NOR2_NI
		port map( A => \21\, B => \14\, Y => \24\ );
end behavioral;
